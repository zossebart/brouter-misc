---context:global   # following code refers to global config

# the elevation parameters

assign downhillcost 0
assign downhillcutoff 1.5
assign uphillcost 0
assign uphillcutoff 1.5

assign processUnusedTags 1

assign   turnInstructionMode  = 1  # %turnInstructionMode% | Mode for the generated turn instructions | [0=none, 1=auto-choose, 2=locus-style, 3=osmand-style, 4=comment-style, 5=gpsies-style, 6=orux-style, 7=locus-old-style]
assign   considerSidewalksSafe = false  # %considerSidewalksSafe% | Set to "true" to consider sidewalks as safe regardless of way type | boolean
assign   allow_steps  = 1  # %allow_steps% | Wether to allow steps | [0=no, 1=only-use-ramp, 2=avoid-or-use-ramp, 3=yes]
assign   use_cycleways = false # %use_cycleways% | Set to "true" to also use cycleways, otherwise try to avoid them | boolean
assign   allowed_roughness = 2 # %allowed_roughness% | How much rumbling is allowed | [0=as smooth as possible, 1=some rumbling allowed, 2=neutral, 3=prefer rumbling, 4=avoid smooth]
assign   pass_uncertain_barriers = false # %pass_uncertain_barriers% | Set to "true", if barriers with no access rules should be considered ok to pass | boolean
assign   twin_stroller = false # %twin_stroller% | Enable if you have a twin stroller, which can not pass certain barriers e.g. bicycle barriers | boolean

assign   cycleway_cost = switch use_cycleways 1 5

assign   validForFoot        1

---context:way   # following code refers to way-tags

assign turncost 0

assign initialclassifier =
     if route=ferry then 1
     else 0

assign initialcost switch route=ferry 10000 0

#
# implicit access here just from the motorroad tag
# (implicit access rules from highway tag handled elsewhere)
#
assign defaultaccess
       switch access=
              not motorroad=yes
              switch or access=private access=no
                     0
                     1

#
# calculate logical foot access
#
assign footaccess
       switch foot=
              defaultaccess
              not or foot=private foot=no

assign accesspenalty switch footaccess 0 100000

assign isresidentialorliving = or highway=residential|living_street living_street=yes

assign has_sidewalk = sidewalk=yes|left|right|both
assign sidewalkreduce if has_sidewalk then 0.6 else 1

assign highwaymainpenalty = if highway=service|rest_area|tertiary|tertiary_link|unclassified then 2
                            else if highway=services|yes|secondary|secondary_link|road then 3
                            else if highway=primary|primary_link then 4
                            else 0

# calculate roughness penalty
assign smoothness_penalty
       if smoothness= then 2 # not set
       else if smoothness=excellent then 4 # smooth
       else if smoothness=good|very_good then 3 # less smooth
       else if smoothness=intermediate then 1 # somewhat rough
       else if smoothness=bad|very_bad|robust_wheels then 0 # very rough
       else 100 # avoid all other values

assign surface_penalty
       if surface= then 2 # not set
       else if surface=asphalt|paved|concrete then 4 # smooth
       else if surface=paved|compacted|fine_gravel|sett|ground|dirt|wood|earth|metal then 3 # less smooth
       else if surface=gravel|unpaved|pebblestone|grass_paver then 1 # somewhat rough
       else if surface=cobblestone then 0 # very rough
       else 5 # avoid all other values (grass, sand, mud, clay)

assign tracktype_penalty
       if tracktype= then 2 # not set
       else if tracktype=grade1 then 4 #smooth
       else if tracktype=grade2 then 3 # less smooth
       else if tracktype=grade3 then 1 # somewhat rough
       else if tracktype=grade4 then 0 # very rough
       else 5 # tracktype=grade5

assign smooth_surf_tracktype_high = max smoothness_penalty max surface_penalty tracktype_penalty

assign surf_smooth_penalty if not equal 2 smoothness_penalty then smoothness_penalty
                     else if not equal 2 surface_penalty then surface_penalty
                     else if not equal 2 tracktype_penalty then tracktype_penalty
                     else 2 # not set

assign roughness_coeff = multiply -1 ( sub 1 ( multiply allowed_roughness 0.5 ) ) # scale allowed_roughness from 0..2..4 to -1..0..1
assign surf_smooth_coeff = multiply -1 ( sub 1 ( multiply surf_smooth_penalty 0.5 ) ) # scale allowed_roughness from 0..2..4 to -1..0..1
assign roughness_temp = multiply roughness_coeff surf_smooth_coeff

assign roughness_penalty
       if greater smooth_surf_tracktype_high 4 then smooth_surf_tracktype_high
       else if roughness_temp then (
              multiply 2 add 1 roughness_temp
       )
       else 0 # either allowed_roughness was 'neutral' and/or surf_smooth_penalty was not set

assign costfactor
  add accesspenalty
  add roughness_penalty
  max 1 # prevent cf falling below 1 because of multiplications later on

  if      and highway= not route=ferry then  100000

  else if route=ferry                  then  5.67
  else if or isresidentialorliving
          highway=footway|pedestrian|platform|corridor|crossing|bus_stop|track then 1
  else if highwaymainpenalty then (
       if and has_sidewalk considerSidewalksSafe then 1
              else multiply sidewalkreduce highwaymainpenalty
  )
  else if highway=steps then (
              if equal allow_steps 1 then
                     if ramp:stroller=yes then 2 else 9999
              else if equal allow_steps 2 then
                     if ramp:stroller=yes then 2 else 50
              else if equal allow_steps 3 then 1
              else 9999 # allow_steps = 0 or other values
  )
  else if highway=path|cycleway then (
              if foot=designated then (
                     if or highway=cycleway bicycle=designated then
                            if segregated=yes then 1 # footway/cycleway with segregation
                                              else 1.2 # shared foot/cycleway
                     else 1 # designated footway
              )
              else if and or highway=cycleway bicycle=designated not foot=designated then cycleway_cost # designated cycleway
              else 50 # uncertain path not explicitly designated for pedestrians
  )
  else 9999

# way priorities used for voice hint generation

assign priorityclassifier =

  if      ( highway=motorway                       ) then  30
  else if ( highway=motorway_link                  ) then  29
  else if ( highway=trunk                          ) then  28
  else if ( highway=trunk_link                     ) then  27
  else if ( highway=primary                        ) then  26
  else if ( highway=primary_link                   ) then  25
  else if ( highway=secondary                      ) then  24
  else if ( highway=secondary_link                 ) then  23
  else if ( highway=tertiary                       ) then  22
  else if ( highway=tertiary_link                  ) then  21
  else if ( highway=unclassified                   ) then  20
  else if ( isresidentialorliving                  ) then  6
  else if ( highway=service                        ) then  6
  else if ( highway=cycleway                       ) then  6
  else if ( or bicycle=designated bicycle_road=yes ) then  6
  else if ( highway=track                          ) then if tracktype=grade1 then 6 else 4
  else if ( highway=bridleway|road|path|footway    ) then  4
  else if ( highway=steps                          ) then  2
  else if ( highway=pedestrian                     ) then  2
  else 0

# some more classifying bits used for voice hint generation...

assign isroundabout = junction=roundabout
assign islinktype = highway=motorway_link|trunk_link|primary_link|secondary_link|tertiary_link
assign isgoodforcars = if greater priorityclassifier 6 then true
                  else if ( or isresidentialorliving highway=service ) then true
                  else if ( and highway=track tracktype=grade1 ) then true
                  else false


# ... encoded into a bitmask

assign classifiermask add multiply isroundabout   4
                      add multiply islinktype     8
                          multiply isgoodforcars 16

---context:node  # following code refers to node tags

assign defaultaccess
       switch access=
              1 # add default barrier restrictions here!
              switch or access=private access=no
                     0
                     1

assign footaccess
       switch foot=
              defaultaccess
              switch or foot=private foot=no
                     0
                     1

assign accessible_barrier_penalty =
       if barrier=bollard|entrance|border_control|bus_trap|sump_buster|no|spikes|checkpoint|toll_booth then 1
       else if barrier=sally_port|kerb|stone|block then 10
       else if barrier=motorcycle_barrier|cycle_barrier then if twin_stroller then 1000000 else 20
       else 0

assign possible_restricted_barrier_penalty =
       if barrier=bump_gate|lift_gate|swing_gate|hampshire_gate|door|gate then 30
       else if barrier=cattle_grid|kissing_gate|horse_stile|chain|rope then 50
       else 0

assign barrier_penalty =
       if barrier= then 0
       else if accessible_barrier_penalty then accessible_barrier_penalty
       else if possible_restricted_barrier_penalty then
              if and access= pass_uncertain_barriers then
                     accessible_barrier_penalty
              else 1000000
       else 1000000

assign initialcost =
       add switch footaccess 0 1000000
       barrier_penalty
